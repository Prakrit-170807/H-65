{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Speech from 'expo-speech';\nimport { Header } from 'react-native-elements';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n\n    _this.speak = function () {\n      var thingToSay = _this.state.name;\n    };\n\n    _this.state = {\n      name: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaProvider, null, React.createElement(View, {\n        style: styles.textContainer1\n      }, React.createElement(Header, {\n        backgroundColor: '#07B89E',\n        centerComponent: {\n          text: 'Text To Speech Converter',\n          style: {\n            color: 'black',\n            fontSize: 16,\n            fontWeight: \"bold\"\n          }\n        }\n      }), React.createElement(Image, {\n        style: styles.imageIcon,\n        source: {\n          uri: 'https://img.utdstc.com/icons/voice-to-text-text-to-speech-android.png:225'\n        }\n      }), React.createElement(Text, {\n        style: styles.text2\n      }, \" Enter The Word \"), React.createElement(TextInput, {\n        style: styles.inputBox,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            name: text\n          });\n        },\n        value: this.state.name\n      }), React.createElement(View, null, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.speak\n      }, React.createElement(Text, {\n        style: styles.text2\n      }, \" Click Here To Hear Speech \")))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  inputBox: {\n    marginTop: 20,\n    width: '80%',\n    alignSelf: 'center',\n    height: 40,\n    textAlign: 'center',\n    borderWidth: 4,\n    outline: 'none'\n  },\n  textContainer1: {\n    backgroundColor: 'white',\n    flex: 1,\n    justifyContent: 'center'\n  },\n  text2: {\n    color: 'black',\n    fontSize: 20,\n    textAlign: 'center',\n    fontStyle: 'bold',\n    alignSelf: 'center',\n    fontWeight: 'bold'\n  },\n  button: {\n    padding: 20,\n    fontSize: 20,\n    textAlign: 'center',\n    backgroundColor: '#07B89E',\n    marginTop: 80,\n    borderRadius: 50,\n    width: '80%',\n    alignSelf: 'center',\n    height: 80\n  },\n  imageIcon: {\n    width: 150,\n    height: 150,\n    marginLeft: 95\n  }\n});","map":{"version":3,"sources":["/Volumes/Coding/NPM/Home Project/H-65/App.js"],"names":["React","Speech","Header","SafeAreaProvider","App","speak","thingToSay","state","name","styles","textContainer1","text","style","color","fontSize","fontWeight","imageIcon","uri","text2","inputBox","setState","button","Component","StyleSheet","create","marginTop","width","alignSelf","height","textAlign","borderWidth","outline","backgroundColor","flex","justifyContent","fontStyle","padding","borderRadius","marginLeft"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;AAEA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;;IAEqBC,G;;;;;AACnB,iBAAc;AAAA;;AAAA;;AACZ;;AADY,UAOdC,KAPc,GAON,YAAM;AACZ,UAAIC,UAAU,GAAG,MAAKC,KAAL,CAAWC,IAA5B;AAkBD,KA1Ba;;AAEZ,UAAKD,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAFY;AAKb;;;;WAuBD,kBAAS;AAAA;;AACP,aACE,oBAAC,gBAAD,QACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,SACE,oBAAC,MAAD;AACE,QAAA,eAAe,EAAE,SADnB;AAEE,QAAA,eAAe,EAAE;AACfC,UAAAA,IAAI,EAAE,0BADS;AAEfC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,QAAQ,EAAC,EAA3B;AAA+BC,YAAAA,UAAU,EAAC;AAA1C;AAFQ;AAFnB,QADF,EASE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAEN,MAAM,CAACO,SADhB;AAEE,QAAA,MAAM,EAAE;AACNC,UAAAA,GAAG,EACD;AAFI;AAFV,QATF,EAiBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACS;AAApB,4BAjBF,EAkBE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAET,MAAM,CAACU,QADhB;AAEE,QAAA,YAAY,EAAE,sBAACR,IAAD,EAAU;AACtB,UAAA,MAAI,CAACS,QAAL,CAAc;AAAEZ,YAAAA,IAAI,EAAEG;AAAR,WAAd;AACD,SAJH;AAKE,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC;AALpB,QAlBF,EA0BE,oBAAC,IAAD,QACE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEC,MAAM,CAACY,MAAhC;AAAwC,QAAA,OAAO,EAAE,KAAKhB;AAAtD,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACS;AAApB,uCADF,CADF,CA1BF,CADA,CADF;AAoCD;;;;EAlE8BlB,KAAK,CAACsB,S;;SAAlBlB,G;AAqErB,IAAMK,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,QAAQ,EAAE;AACRM,IAAAA,SAAS,EAAE,EADH;AAERC,IAAAA,KAAK,EAAE,KAFC;AAGRC,IAAAA,SAAS,EAAE,QAHH;AAIRC,IAAAA,MAAM,EAAE,EAJA;AAKRC,IAAAA,SAAS,EAAE,QALH;AAMRC,IAAAA,WAAW,EAAE,CANL;AAORC,IAAAA,OAAO,EAAE;AAPD,GADqB;AAU/BrB,EAAAA,cAAc,EAAE;AACdsB,IAAAA,eAAe,EAAE,OADH;AAEdC,IAAAA,IAAI,EAAE,CAFQ;AAGdC,IAAAA,cAAc,EAAE;AAHF,GAVe;AAgB/BhB,EAAAA,KAAK,EAAE;AACLL,IAAAA,KAAK,EAAE,OADF;AAGLC,IAAAA,QAAQ,EAAE,EAHL;AAILe,IAAAA,SAAS,EAAE,QAJN;AAKLM,IAAAA,SAAS,EAAE,MALN;AAMLR,IAAAA,SAAS,EAAE,QANN;AAOLZ,IAAAA,UAAU,EAAE;AAPP,GAhBwB;AAyB/BM,EAAAA,MAAM,EAAE;AACNe,IAAAA,OAAO,EAAE,EADH;AAENtB,IAAAA,QAAQ,EAAE,EAFJ;AAGNe,IAAAA,SAAS,EAAE,QAHL;AAING,IAAAA,eAAe,EAAE,SAJX;AAKNP,IAAAA,SAAS,EAAE,EALL;AAMNY,IAAAA,YAAY,EAAE,EANR;AAONX,IAAAA,KAAK,EAAE,KAPD;AAQNC,IAAAA,SAAS,EAAE,QARL;AASNC,IAAAA,MAAM,EAAE;AATF,GAzBuB;AAoC/BZ,EAAAA,SAAS,EAAE;AACTU,IAAAA,KAAK,EAAE,GADE;AAETE,IAAAA,MAAM,EAAE,GAFC;AAGTU,IAAAA,UAAU,EAAE;AAHH;AApCoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {Text,View,StyleSheet,Button,TextInput,TouchableOpacity,Image} from 'react-native';\nimport * as Speech from 'expo-speech';\nimport { Header } from 'react-native-elements';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n    };\n  }\n\n  speak = () => {\n    var thingToSay = this.state.name;\n\n//CHOOSE THE CORRECT TERNARY OPERATION\n    // this.state.name === ''\n    //   : alert('Please Enter a word')\n    //   ? Speech.speak(thingToSay);\n\n    // this.state.name === ''\n    //   ? alert\n    //   : Speech.speak();\n\n    // this.state.name === \n    //    alert('Please Enter a word')\n    //    Speech.speak(thingToSay);\n\n    // this.state.name === ''\n    //   ? alert('Please Enter a word')\n    //   : Speech.speak(thingToSay);\n  };\n\n  render() {\n    return (\n      <SafeAreaProvider>\n      <View style={styles.textContainer1}>\n        <Header\n          backgroundColor={'#07B89E'}\n          centerComponent={{\n            text: 'Text To Speech Converter',\n            style: { color: 'black', fontSize:16, fontWeight:\"bold\"},\n          }}\n        />\n\n        <Image\n          style={styles.imageIcon}\n          source={{\n            uri:\n              'https://img.utdstc.com/icons/voice-to-text-text-to-speech-android.png:225',\n          }}\n        />\n\n        <Text style={styles.text2}> Enter The Word </Text>\n        <TextInput\n          style={styles.inputBox}\n          onChangeText={(text) => {\n            this.setState({ name: text });\n          }}\n          value={this.state.name}\n        />\n\n        <View>\n          <TouchableOpacity style={styles.button} onPress={this.speak}>\n            <Text style={styles.text2}> Click Here To Hear Speech </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n      </SafeAreaProvider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  inputBox: {\n    marginTop: 20,\n    width: '80%',\n    alignSelf: 'center',\n    height: 40,\n    textAlign: 'center',\n    borderWidth: 4,\n    outline: 'none',\n  },\n  textContainer1: {\n    backgroundColor: 'white',\n    flex: 1,\n    justifyContent: 'center',\n  },\n\n  text2: {\n    color: 'black',\n\n    fontSize: 20,\n    textAlign: 'center',\n    fontStyle: 'bold',\n    alignSelf: 'center',\n    fontWeight: 'bold',\n  },\n  button: {\n    padding: 20,\n    fontSize: 20,\n    textAlign: 'center',\n    backgroundColor: '#07B89E',\n    marginTop: 80,\n    borderRadius: 50,\n    width: '80%',\n    alignSelf: 'center',\n    height: 80,\n  },\n  imageIcon: {\n    width: 150,\n    height: 150,\n    marginLeft: 95,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}